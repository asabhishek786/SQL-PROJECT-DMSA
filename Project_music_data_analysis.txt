SQL PROJECT 1

--Q.1 who is the senior most employee based on job title?
--SELECT * FROM employee
--ORDER BY levels DESC
--LIMIT 1;

--Q.2 Which countries have the most invoices?
--SELECT COUNT(*) AS c, billing_country 
--FROM invoice
--GROUP BY billing_country
--ORDER BY c DESC;

--Q.3 what are top 3 values of total incvoice? 
--SELECT total AS Top_3_Total 
--FROM invoice
--ORDER BY Top_3_Total DESC
--LIMIT 3;

--Q.4 which city has the best customers? We would like to throw a
-- musical promotional frestival in a city we made the most money.
-- write a query that returns one city that has the highest sum of
-- invoice totals. Return both the city name & sum of invoice totals.
--SELECT billing_city, SUM(total)
--AS invoice_total
--FROM invoice
--GROUP BY billing_city
--ORDER BY invoice_total DESC;

--Q.5 who is the best customer? The customer who has spent the most 
-- money will be declared the best customer. Write a query that returns 
-- the person who has spent the most money.
--SELECT customer.customer_id,customer.first_name,customer.last_name,
--SUM(invoice.total) AS invoice_total 
--FROM customer
--INNER JOIN invoice
--ON customer.customer_id = invoice.customer_id
--GROUP BY customer.customer_id
--ORDER BY invoice_total DESC
--LIMIT 1;

-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-

--Q.6 write query to return the email,first name,last name, and Genre
-- of all Rock Music listners. Return your list ordered alphabetically
-- by email starting with A.
--SELECT DISTINCT email,first_name,last_name
--FROM customer
--INNER JOIN invoice
--ON customer.customer_id = invoice.customer_id
--INNER JOIN invoice_line
--ON invoice.invoice_id = invoice_line.invoice_id
--WHERE track_id IN(
--	SELECT track_id FROM track
--	INNER JOIN genre 
--	ON track.genre_id = genre.genre_id
--	WHERE genre.name LIKE 'Rock'
--	)
--ORDER BY email ASC;

--Q.7 Let's invite the artists who have written the most rock music in
-- our dataset. Write a query that returns the Artist name and total
-- track count of the top 10 rock bands.
--SELECT artist.artist_id, artist.name, COUNT(artist.artist_id) 
--AS number_of_songs
--FROM artist
--INNER JOIN album 
--ON artist.artist_id = album.artist_id
--INNER JOIN track
--ON track.album_id = album.album_id
--INNER JOIN genre 
--ON genre.genre_id = track.genre_id
--WHERE genre.name LIKE 'Rock'
--GROUP BY artist.artist_id
--ORDER BY number_of_songs DESC
--LIMIT 10;

--Q.8 Return all the track names that have a song length longer than the
--average song length. Return the name and milliseconds for each track.
--Order by the song length with the longest songs listed first.
--SELECT name, milliseconds
--FROM track
--WHERE milliseconds > (
--	SELECT AVG(milliseconds) 
--	AS avg_song_len 
--	FROM track)
--ORDER BY milliseconds DESC;

-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-

--Q.9 Find how much amount spent by each customer on artist? Write a
--query to return customer name, artist name and total spent.
--WITH best_selling_artist AS( 
--	SELECT artist.artist_id AS artists_id, artist.name AS artist_name, 
--	SUM(invoice_line.unit_price * invoice_line.quantity) AS total_sales 
--	FROM invoice_line
--	INNER JOIN track ON track.track_id = invoice_line.track_id
--	INNER JOIN album ON album.album_id = track.album_id
--	INNER JOIN artist ON artist.artist_id = album.artist_id
--	GROUP BY artists_id
--	ORDER BY total_sales DESC
--	LIMIT 1)
--SELECT customer.customer_id AS cust_id, customer.first_name, 
--customer.last_name, best_selling_artist.artist_name, 
--SUM(invoice_line.unit_price * invoice_line.quantity) AS amount_spent
--FROM invoice
--INNER JOIN customer ON customer.customer_id = invoice.customer_id
--INNER JOIN invoice_line ON invoice_line.invoice_id = invoice.invoice_id
--INNER JOIN track ON track.track_id = invoice_line.track_id
--INNER JOIN album ON album.album_id = track.album_id
--INNER JOIN best_selling_artist ON best_selling_artist.artists_id = album.artist_id
--GROUP BY cust_id, first_name, last_name, artist_name
--ORDER BY amount_spent DESC;

--Q.10 We want to find out the most popular music genre for each country.
--We determine the most popular genre as the genre with the higest
--amount of purchases. Write a query that returns each country along with
--the top genre. For countries where the maximum number of purchases is
--shared return all genres.

1st METHOD:-
--WITH popular_genre AS(
--SELECT COUNT(invoice_line.quantity) AS purchases, customer.country, 
--genre.name AS music_name, genre.genre_id AS music_genre_id,
--ROW_NUMBER() OVER(PARTITION BY customer.country
--ORDER BY COUNT(invoice_line.quantity)DESC) AS Row_No
--FROM invoice_line
--INNER JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
--INNER JOIN customer ON customer.customer_id = invoice.customer_id
--INNER JOIN track ON track.track_id = invoice_line.track_id
--INNER JOIN genre ON genre.genre_id = track.genre_id
--GROUP BY country, music_name, music_genre_id
--ORDER BY country ASC, purchases DESC
--)
--SELECT * FROM popular_genre 
--WHERE Row_no <= 1;

2nd METHOD:-
--WITH RECURSIVE sales_per_country AS(
--SELECT COUNT(*) AS purchase_per_genre,customer.country, genre.name, genre.genre_id
--FROM invoice_line
--INNER JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
--INNER JOIN customer ON customer.customer_id = invoice.customer_id
--INNER JOIN track ON track.track_id = invoice_line.track_id
--INNER JOIN genre ON genre.genre_id = track.genre_id
--GROUP BY 2,3,4
--ORDER BY 2),

--max_genre_per_country AS (SELECT MAX(purchase_per_genre) AS max_genre_number, country
--FROM sales_per_country
--GROUP BY 2
--ORDER BY 2)

--SELECT sales_per_country.* FROM sales_per_country
--INNER JOIN max_genre_per_country ON sales_per_country.country = max_genre_per_country.country
--WHERE sales_per_country.purchase_per_genre = max_genre_per_country.max_genre_number;

--Q.11 Write a query that determines the customer that has spent the most
--on music for each country. Write a query that returns the country along
--with the top customer and how much they spent. For countries where the 
--top amount spent is shared, provide all customers who spent this amount.

1st METHOD:-
--WITH RECURSIVE customer_with_country AS(
--SELECT customer.customer_id, first_name, last_name, billing_country,
--SUM(total) AS total_spending
--FROM invoice
--INNER JOIN customer ON customer.customer_id = invoice.customer_id
--GROUP BY 1,2,3,4
--ORDER BY 1,5 DESC),

--country_max_spending AS(
--SELECT billing_country, MAX(total_spending) AS max_spending
--FROM customer_with_country
--GROUP BY billing_country)

--SELECT cc.billing_country, cc.total_spending, cc.first_name, cc.last_name, cc.customer_id
--FROM customer_with_country AS cc
--INNER JOIN country_max_spending AS ms
--ON cc.billing_country = ms.billing_country
--WHERE cc.total_spending = ms.max_spending
--ORDER BY 1;

2nd METHOD:- 
--WITH Customer_with_country AS(
--SELECT customer.customer_id, first_name, last_name, billing_country,
--SUM(total) AS total_spending, ROW_NUMBER() OVER(PARTITION BY billing_country
					ORDER BY SUM(total) DESC) AS ROW_No
--FROM invoice
--INNER JOIN customer ON customer.customer_id = invoice.customer_id
--GROUP BY 1,2,3,4
--ORDER BY 4 ASC, 5 DESC
--)
--SELECT * FROM Customer_with_country
--WHERE ROW_No <= 1;

